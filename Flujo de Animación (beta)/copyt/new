	.equ SCREEN_WIDTH,   640
	.equ SCREEN_HEIGH,   480
	.equ BITS_PER_PIXEL, 32

	.equ GPIO_BASE,    0x3f200000
	.equ GPIO_GPFSEL0, 0x00
	.equ GPIO_GPLEV0,  0x34

	.globl main

main:
    // x0 contiene la direccion base del framebuffer
	mov x20, x0 // Guarda la dirección base del framebuffer en x20


	movz x10, 0x75, lsl 16
	movk x10, 0xaadb, lsl 00 //color "cielo" en x10

    mov x2, SCREEN_HEIGH         // x2 = Y Size

restoreWidth:
	mov x1, SCREEN_WIDTH         // X Size
printBackground:
	stur w10,[x0]  // Colorear el pixel N
	add x0,x0,4    // Siguiente pixel
	sub x1,x1,1    // Decrementar contador X
	cbnz x1, printBackground  // Si no terminó la fila, salto
	sub x2,x2,1    // Decrementar contador Y
	cbnz x2,restoreWidth  // Si no es la última fila, salto


InfLoop:
	b InfLoop