
Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD app.o
LOAD basic.o
LOAD complex.o
LOAD start.o
                0x0000000000080000                . = 0x80000

.text           0x0000000000080000    0x91208
 *(.text.boot)
 .text.boot     0x0000000000080000    0x100c8 start.o
                0x0000000000080000                _start
 *(.text*)
 .text          0x00000000000900c8      0x808 app.o
                0x0000000000090730                main
 .text          0x00000000000908d0      0x2d0 basic.o
 .text          0x0000000000090ba0      0x668 complex.o
 .text          0x0000000000091208    0x80000 start.o

.iplt           0x0000000000111208        0x0
 .iplt          0x0000000000111208        0x0 start.o

.rela.dyn       0x0000000000111208        0x0
 .rela.iplt     0x0000000000111208        0x0 start.o
 .rela.text.boot
                0x0000000000111208        0x0 start.o

.data           0x0000000000111208        0x0
 .data          0x0000000000111208        0x0 app.o
 .data          0x0000000000111208        0x0 basic.o
 .data          0x0000000000111208        0x0 complex.o
 .data          0x0000000000111208        0x0 start.o

.igot.plt       0x0000000000111208        0x0
 .igot.plt      0x0000000000111208        0x0 start.o

.bss            0x0000000000111208        0x0
 *(.bss*)
 .bss           0x0000000000111208        0x0 app.o
 .bss           0x0000000000111208        0x0 basic.o
 .bss           0x0000000000111208        0x0 complex.o
 .bss           0x0000000000111208        0x0 start.o

.bss            0x0000000000111208        0x8
                0x0000000000111210                . = ALIGN (0x10)
 *fill*         0x0000000000111208        0x8 
                0x0000000000111210                __bss_start = .
 *(.bss .bss.*)
 *(COMMON)
                0x0000000000111210                __bss_end = .
                0x0000000000111210                _end = .
                0x0000000000000000                __bss_size = ((__bss_end - __bss_start) >> 0x3)
OUTPUT(kernel8.elf elf64-littleaarch64)
LOAD linker stubs

.debug_line     0x0000000000000000      0x59d
 .debug_line    0x0000000000000000      0x266 app.o
 .debug_line    0x0000000000000266       0xf6 basic.o
 .debug_line    0x000000000000035c      0x1ee complex.o
 .debug_line    0x000000000000054a       0x53 start.o

.debug_info     0x0000000000000000       0xb8
 .debug_info    0x0000000000000000       0x2e app.o
 .debug_info    0x000000000000002e       0x2e basic.o
 .debug_info    0x000000000000005c       0x2e complex.o
 .debug_info    0x000000000000008a       0x2e start.o

.debug_abbrev   0x0000000000000000       0x50
 .debug_abbrev  0x0000000000000000       0x14 app.o
 .debug_abbrev  0x0000000000000014       0x14 basic.o
 .debug_abbrev  0x0000000000000028       0x14 complex.o
 .debug_abbrev  0x000000000000003c       0x14 start.o

.debug_aranges  0x0000000000000000       0xc0
 .debug_aranges
                0x0000000000000000       0x30 app.o
 .debug_aranges
                0x0000000000000030       0x30 basic.o
 .debug_aranges
                0x0000000000000060       0x30 complex.o
 .debug_aranges
                0x0000000000000090       0x30 start.o

.debug_str      0x0000000000000000       0x8c
 .debug_str     0x0000000000000000       0x4d app.o
 .debug_str     0x000000000000004d       0x37 basic.o
                                         0x4b (size before relaxing)
 .debug_str     0x0000000000000084       0x4d complex.o
 .debug_str     0x0000000000000084        0x8 start.o
                                         0x4b (size before relaxing)
